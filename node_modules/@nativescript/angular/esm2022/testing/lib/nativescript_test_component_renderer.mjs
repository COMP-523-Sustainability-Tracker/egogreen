import { Injectable } from '@angular/core';
import { TestComponentRenderer } from '@angular/core/testing';
import { ProxyViewContainer } from '@nativescript/core';
import { testingRootView } from './test-root-view';
import * as i0 from "@angular/core";
/**
 * A NativeScript based implementation of the TestComponentRenderer.
 */
class NativeScriptTestComponentRenderer extends TestComponentRenderer {
    insertRootElement(rootElId) {
        const layout = new ProxyViewContainer();
        layout.id = rootElId;
        const rootLayout = testingRootView();
        while (rootLayout.getChildrenCount() > 0) {
            rootLayout.removeChild(rootLayout.getChildAt(0));
        }
        rootLayout.addChild(layout);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.1", ngImport: i0, type: NativeScriptTestComponentRenderer, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.0.1", ngImport: i0, type: NativeScriptTestComponentRenderer }); }
}
export { NativeScriptTestComponentRenderer };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.1", ngImport: i0, type: NativeScriptTestComponentRenderer, decorators: [{
            type: Injectable
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF0aXZlc2NyaXB0X3Rlc3RfY29tcG9uZW50X3JlbmRlcmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvYW5ndWxhci90ZXN0aW5nL3NyYy9saWIvbmF0aXZlc2NyaXB0X3Rlc3RfY29tcG9uZW50X3JlbmRlcmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDOUQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDeEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGtCQUFrQixDQUFDOztBQUVuRDs7R0FFRztBQUNILE1BQ2EsaUNBQWtDLFNBQVEscUJBQXFCO0lBQzFFLGlCQUFpQixDQUFDLFFBQWdCO1FBQ2hDLE1BQU0sTUFBTSxHQUFHLElBQUksa0JBQWtCLEVBQUUsQ0FBQztRQUN4QyxNQUFNLENBQUMsRUFBRSxHQUFHLFFBQVEsQ0FBQztRQUVyQixNQUFNLFVBQVUsR0FBRyxlQUFlLEVBQUUsQ0FBQztRQUNyQyxPQUFPLFVBQVUsQ0FBQyxnQkFBZ0IsRUFBRSxHQUFHLENBQUMsRUFBRTtZQUN4QyxVQUFVLENBQUMsV0FBVyxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNsRDtRQUNELFVBQVUsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDOUIsQ0FBQzs4R0FWVSxpQ0FBaUM7a0hBQWpDLGlDQUFpQzs7U0FBakMsaUNBQWlDOzJGQUFqQyxpQ0FBaUM7a0JBRDdDLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUZXN0Q29tcG9uZW50UmVuZGVyZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlL3Rlc3RpbmcnO1xuaW1wb3J0IHsgUHJveHlWaWV3Q29udGFpbmVyIH0gZnJvbSAnQG5hdGl2ZXNjcmlwdC9jb3JlJztcbmltcG9ydCB7IHRlc3RpbmdSb290VmlldyB9IGZyb20gJy4vdGVzdC1yb290LXZpZXcnO1xuXG4vKipcbiAqIEEgTmF0aXZlU2NyaXB0IGJhc2VkIGltcGxlbWVudGF0aW9uIG9mIHRoZSBUZXN0Q29tcG9uZW50UmVuZGVyZXIuXG4gKi9cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBOYXRpdmVTY3JpcHRUZXN0Q29tcG9uZW50UmVuZGVyZXIgZXh0ZW5kcyBUZXN0Q29tcG9uZW50UmVuZGVyZXIge1xuICBpbnNlcnRSb290RWxlbWVudChyb290RWxJZDogc3RyaW5nKSB7XG4gICAgY29uc3QgbGF5b3V0ID0gbmV3IFByb3h5Vmlld0NvbnRhaW5lcigpO1xuICAgIGxheW91dC5pZCA9IHJvb3RFbElkO1xuXG4gICAgY29uc3Qgcm9vdExheW91dCA9IHRlc3RpbmdSb290VmlldygpO1xuICAgIHdoaWxlIChyb290TGF5b3V0LmdldENoaWxkcmVuQ291bnQoKSA+IDApIHtcbiAgICAgIHJvb3RMYXlvdXQucmVtb3ZlQ2hpbGQocm9vdExheW91dC5nZXRDaGlsZEF0KDApKTtcbiAgICB9XG4gICAgcm9vdExheW91dC5hZGRDaGlsZChsYXlvdXQpO1xuICB9XG59XG4iXX0=