import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { filter } from 'rxjs/operators';
import * as i0 from "@angular/core";
class NativeScriptLoadingService {
    constructor() {
        this.mainModuleReady$ = new BehaviorSubject(false);
        this.readyToDestroy$ = new BehaviorSubject(true);
        this.onMainModuleReady$ = this.mainModuleReady$.pipe(filter((ready) => ready));
    }
    /**
     * delays destroying this module until `notifyReadyToDestroy()`.
     * remember to call `notifyReadyToDestroy()` when done!
     */
    waitUntilNotified() {
        this.readyToDestroy$.next(false);
    }
    /**
     * notifies this module is ready to be destroyed
     */
    notifyReadyToDestroy() {
        this.readyToDestroy$.next(true);
    }
    isMainModuleReady() {
        return this.mainModuleReady$.value;
    }
    ngOnDestroy() {
        this.readyToDestroy$.complete();
        this.mainModuleReady$.complete();
    }
    /**
     * This funcion is called by the bootstrap code when the app is ready
     * @internal
     */
    _notifyMainModuleReady() {
        this.mainModuleReady$.next(true);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.1", ngImport: i0, type: NativeScriptLoadingService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.0.1", ngImport: i0, type: NativeScriptLoadingService, providedIn: 'root' }); }
}
export { NativeScriptLoadingService };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.1", ngImport: i0, type: NativeScriptLoadingService, decorators: [{
            type: Injectable,
            args: [{ providedIn: 'root' }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGluZy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvYW5ndWxhci9zcmMvbGliL2xvYWRpbmcuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFhLE1BQU0sZUFBZSxDQUFDO0FBQ3RELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDdkMsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGdCQUFnQixDQUFDOztBQUV4QyxNQUNhLDBCQUEwQjtJQUR2QztRQUVVLHFCQUFnQixHQUFHLElBQUksZUFBZSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3RELG9CQUFlLEdBQUcsSUFBSSxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDNUMsdUJBQWtCLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7S0ErQjNFO0lBN0JDOzs7T0FHRztJQUNILGlCQUFpQjtRQUNmLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ25DLENBQUM7SUFFRDs7T0FFRztJQUNILG9CQUFvQjtRQUNsQixJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBQ0QsaUJBQWlCO1FBQ2YsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxDQUFDO0lBQ3JDLENBQUM7SUFDRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLGVBQWUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNoQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDbkMsQ0FBQztJQUVEOzs7T0FHRztJQUNILHNCQUFzQjtRQUNwQixJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ25DLENBQUM7OEdBakNVLDBCQUEwQjtrSEFBMUIsMEJBQTBCLGNBRGIsTUFBTTs7U0FDbkIsMEJBQTBCOzJGQUExQiwwQkFBMEI7a0JBRHRDLFVBQVU7bUJBQUMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgT25EZXN0cm95IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IGZpbHRlciB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuQEluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSlcbmV4cG9ydCBjbGFzcyBOYXRpdmVTY3JpcHRMb2FkaW5nU2VydmljZSBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG4gIHByaXZhdGUgbWFpbk1vZHVsZVJlYWR5JCA9IG5ldyBCZWhhdmlvclN1YmplY3QoZmFsc2UpO1xuICByZWFkeVRvRGVzdHJveSQgPSBuZXcgQmVoYXZpb3JTdWJqZWN0KHRydWUpO1xuICBvbk1haW5Nb2R1bGVSZWFkeSQgPSB0aGlzLm1haW5Nb2R1bGVSZWFkeSQucGlwZShmaWx0ZXIoKHJlYWR5KSA9PiByZWFkeSkpO1xuXG4gIC8qKlxuICAgKiBkZWxheXMgZGVzdHJveWluZyB0aGlzIG1vZHVsZSB1bnRpbCBgbm90aWZ5UmVhZHlUb0Rlc3Ryb3koKWAuXG4gICAqIHJlbWVtYmVyIHRvIGNhbGwgYG5vdGlmeVJlYWR5VG9EZXN0cm95KClgIHdoZW4gZG9uZSFcbiAgICovXG4gIHdhaXRVbnRpbE5vdGlmaWVkKCkge1xuICAgIHRoaXMucmVhZHlUb0Rlc3Ryb3kkLm5leHQoZmFsc2UpO1xuICB9XG5cbiAgLyoqXG4gICAqIG5vdGlmaWVzIHRoaXMgbW9kdWxlIGlzIHJlYWR5IHRvIGJlIGRlc3Ryb3llZFxuICAgKi9cbiAgbm90aWZ5UmVhZHlUb0Rlc3Ryb3koKSB7XG4gICAgdGhpcy5yZWFkeVRvRGVzdHJveSQubmV4dCh0cnVlKTtcbiAgfVxuICBpc01haW5Nb2R1bGVSZWFkeSgpIHtcbiAgICByZXR1cm4gdGhpcy5tYWluTW9kdWxlUmVhZHkkLnZhbHVlO1xuICB9XG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMucmVhZHlUb0Rlc3Ryb3kkLmNvbXBsZXRlKCk7XG4gICAgdGhpcy5tYWluTW9kdWxlUmVhZHkkLmNvbXBsZXRlKCk7XG4gIH1cblxuICAvKipcbiAgICogVGhpcyBmdW5jaW9uIGlzIGNhbGxlZCBieSB0aGUgYm9vdHN0cmFwIGNvZGUgd2hlbiB0aGUgYXBwIGlzIHJlYWR5XG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgX25vdGlmeU1haW5Nb2R1bGVSZWFkeSgpIHtcbiAgICB0aGlzLm1haW5Nb2R1bGVSZWFkeSQubmV4dCh0cnVlKTtcbiAgfVxufVxuIl19