import { Component, ElementRef, Input, Renderer2 } from '@angular/core';
import { Frame, Page } from '@nativescript/core';
import { frameMeta, registerElement } from '../../element-registry';
import { PageService } from './page.service';
import * as i0 from "@angular/core";
export function customFrameComponentFactory(v) {
    return v.element.nativeElement;
}
export function customPageFactoryFromFrame(v) {
    return v.page;
}
registerElement('FramePage', () => Frame, {
    insertChild: (parent, child) => {
        if (child instanceof Page) {
            frameMeta.insertChild(parent, child);
            return;
        }
        parent['__ng_page__'].content = child;
    },
});
class FramePageComponent {
    constructor(element, renderer) {
        this.element = element;
        this.actionBarHidden = false;
        this.page = renderer.createElement('Page');
        element.nativeElement['__ng_page__'] = this.page;
        renderer.appendChild(element.nativeElement, this.page);
    }
    ngOnChanges(changes) {
        if (changes.actionBarHidden && changes.actionBarHidden.previousValue !== changes.actionBarHidden.currentValue) {
            if (this.page) {
                this.page.actionBarHidden = !!this.actionBarHidden;
            }
        }
    }
    ngAfterViewInit() {
        if (this.page) {
            this.page.actionBarHidden = !!this.actionBarHidden;
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.1", ngImport: i0, type: FramePageComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.0.1", type: FramePageComponent, selector: "FramePage", inputs: { actionBarHidden: "actionBarHidden" }, providers: [
            {
                provide: Frame,
                useFactory: customFrameComponentFactory,
                deps: [FramePageComponent],
            },
            {
                provide: Page,
                useFactory: customPageFactoryFromFrame,
                deps: [FramePageComponent],
            },
            PageService,
        ], usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true }); }
}
export { FramePageComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.1", ngImport: i0, type: FramePageComponent, decorators: [{
            type: Component,
            args: [{
                    // eslint-disable-next-line @angular-eslint/component-selector
                    selector: 'FramePage',
                    template: `<ng-content></ng-content>`,
                    providers: [
                        {
                            provide: Frame,
                            useFactory: customFrameComponentFactory,
                            deps: [FramePageComponent],
                        },
                        {
                            provide: Page,
                            useFactory: customPageFactoryFromFrame,
                            deps: [FramePageComponent],
                        },
                        PageService,
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { actionBarHidden: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJhbWUtcGFnZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9hbmd1bGFyL3NyYy9saWIvY2RrL2ZyYW1lLXBhZ2UvZnJhbWUtcGFnZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFpQixTQUFTLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBYSxTQUFTLEVBQTRCLE1BQU0sZUFBZSxDQUFDO0FBQzVILE9BQU8sRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFRLE1BQU0sb0JBQW9CLENBQUM7QUFDdkQsT0FBTyxFQUFFLFNBQVMsRUFBRSxlQUFlLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUNwRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7O0FBRTdDLE1BQU0sVUFBVSwyQkFBMkIsQ0FBQyxDQUFxQjtJQUMvRCxPQUFPLENBQUMsQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDO0FBQ2pDLENBQUM7QUFFRCxNQUFNLFVBQVUsMEJBQTBCLENBQUMsQ0FBcUI7SUFDOUQsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDO0FBQ2hCLENBQUM7QUFFRCxlQUFlLENBQUMsV0FBVyxFQUFFLEdBQUcsRUFBRSxDQUFDLEtBQUssRUFBRTtJQUN4QyxXQUFXLEVBQUUsQ0FBQyxNQUFhLEVBQUUsS0FBVyxFQUFFLEVBQUU7UUFDMUMsSUFBSSxLQUFLLFlBQVksSUFBSSxFQUFFO1lBQ3pCLFNBQVMsQ0FBQyxXQUFXLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO1lBQ3JDLE9BQU87U0FDUjtRQUNELE1BQU0sQ0FBQyxhQUFhLENBQUMsQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO0lBQ3hDLENBQUM7Q0FDRixDQUFDLENBQUM7QUFDSCxNQWtCYSxrQkFBa0I7SUFLN0IsWUFBbUIsT0FBMEIsRUFBRSxRQUFtQjtRQUEvQyxZQUFPLEdBQVAsT0FBTyxDQUFtQjtRQUZwQyxvQkFBZSxHQUFHLEtBQUssQ0FBQztRQUcvQixJQUFJLENBQUMsSUFBSSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFTLENBQUM7UUFDbkQsT0FBTyxDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQ2pELFFBQVEsQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDekQsQ0FBQztJQUVELFdBQVcsQ0FBQyxPQUFzQjtRQUNoQyxJQUFJLE9BQU8sQ0FBQyxlQUFlLElBQUksT0FBTyxDQUFDLGVBQWUsQ0FBQyxhQUFhLEtBQUssT0FBTyxDQUFDLGVBQWUsQ0FBQyxZQUFZLEVBQUU7WUFDN0csSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFO2dCQUNiLElBQUksQ0FBQyxJQUFJLENBQUMsZUFBZSxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDO2FBQ3BEO1NBQ0Y7SUFDSCxDQUFDO0lBQ0QsZUFBZTtRQUNiLElBQUksSUFBSSxDQUFDLElBQUksRUFBRTtZQUNiLElBQUksQ0FBQyxJQUFJLENBQUMsZUFBZSxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDO1NBQ3BEO0lBQ0gsQ0FBQzs4R0F0QlUsa0JBQWtCO2tHQUFsQixrQkFBa0Isb0ZBZGxCO1lBQ1Q7Z0JBQ0UsT0FBTyxFQUFFLEtBQUs7Z0JBQ2QsVUFBVSxFQUFFLDJCQUEyQjtnQkFDdkMsSUFBSSxFQUFFLENBQUMsa0JBQWtCLENBQUM7YUFDM0I7WUFDRDtnQkFDRSxPQUFPLEVBQUUsSUFBSTtnQkFDYixVQUFVLEVBQUUsMEJBQTBCO2dCQUN0QyxJQUFJLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQzthQUMzQjtZQUNELFdBQVc7U0FDWiwrQ0FiUywyQkFBMkI7O1NBZTFCLGtCQUFrQjsyRkFBbEIsa0JBQWtCO2tCQWxCOUIsU0FBUzttQkFBQztvQkFDVCw4REFBOEQ7b0JBQzlELFFBQVEsRUFBRSxXQUFXO29CQUNyQixRQUFRLEVBQUUsMkJBQTJCO29CQUNyQyxTQUFTLEVBQUU7d0JBQ1Q7NEJBQ0UsT0FBTyxFQUFFLEtBQUs7NEJBQ2QsVUFBVSxFQUFFLDJCQUEyQjs0QkFDdkMsSUFBSSxFQUFFLG9CQUFvQjt5QkFDM0I7d0JBQ0Q7NEJBQ0UsT0FBTyxFQUFFLElBQUk7NEJBQ2IsVUFBVSxFQUFFLDBCQUEwQjs0QkFDdEMsSUFBSSxFQUFFLG9CQUFvQjt5QkFDM0I7d0JBQ0QsV0FBVztxQkFDWjtpQkFDRjt5SEFJVSxlQUFlO3NCQUF2QixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBJbnB1dCwgT25DaGFuZ2VzLCBSZW5kZXJlcjIsIFNpbXBsZUNoYW5nZXMsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRnJhbWUsIFBhZ2UsIFZpZXcgfSBmcm9tICdAbmF0aXZlc2NyaXB0L2NvcmUnO1xuaW1wb3J0IHsgZnJhbWVNZXRhLCByZWdpc3RlckVsZW1lbnQgfSBmcm9tICcuLi8uLi9lbGVtZW50LXJlZ2lzdHJ5JztcbmltcG9ydCB7IFBhZ2VTZXJ2aWNlIH0gZnJvbSAnLi9wYWdlLnNlcnZpY2UnO1xuXG5leHBvcnQgZnVuY3Rpb24gY3VzdG9tRnJhbWVDb21wb25lbnRGYWN0b3J5KHY6IEZyYW1lUGFnZUNvbXBvbmVudCkge1xuICByZXR1cm4gdi5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjdXN0b21QYWdlRmFjdG9yeUZyb21GcmFtZSh2OiBGcmFtZVBhZ2VDb21wb25lbnQpIHtcbiAgcmV0dXJuIHYucGFnZTtcbn1cblxucmVnaXN0ZXJFbGVtZW50KCdGcmFtZVBhZ2UnLCAoKSA9PiBGcmFtZSwge1xuICBpbnNlcnRDaGlsZDogKHBhcmVudDogRnJhbWUsIGNoaWxkOiBWaWV3KSA9PiB7XG4gICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgUGFnZSkge1xuICAgICAgZnJhbWVNZXRhLmluc2VydENoaWxkKHBhcmVudCwgY2hpbGQpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBwYXJlbnRbJ19fbmdfcGFnZV9fJ10uY29udGVudCA9IGNoaWxkO1xuICB9LFxufSk7XG5AQ29tcG9uZW50KHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEBhbmd1bGFyLWVzbGludC9jb21wb25lbnQtc2VsZWN0b3JcbiAgc2VsZWN0b3I6ICdGcmFtZVBhZ2UnLFxuICB0ZW1wbGF0ZTogYDxuZy1jb250ZW50PjwvbmctY29udGVudD5gLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBGcmFtZSxcbiAgICAgIHVzZUZhY3Rvcnk6IGN1c3RvbUZyYW1lQ29tcG9uZW50RmFjdG9yeSxcbiAgICAgIGRlcHM6IFtGcmFtZVBhZ2VDb21wb25lbnRdLFxuICAgIH0sXG4gICAge1xuICAgICAgcHJvdmlkZTogUGFnZSxcbiAgICAgIHVzZUZhY3Rvcnk6IGN1c3RvbVBhZ2VGYWN0b3J5RnJvbUZyYW1lLFxuICAgICAgZGVwczogW0ZyYW1lUGFnZUNvbXBvbmVudF0sXG4gICAgfSxcbiAgICBQYWdlU2VydmljZSxcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgRnJhbWVQYWdlQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCwgT25DaGFuZ2VzIHtcbiAgcGFnZTogUGFnZTtcblxuICBASW5wdXQoKSBhY3Rpb25CYXJIaWRkZW4gPSBmYWxzZTtcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgZWxlbWVudDogRWxlbWVudFJlZjxGcmFtZT4sIHJlbmRlcmVyOiBSZW5kZXJlcjIpIHtcbiAgICB0aGlzLnBhZ2UgPSByZW5kZXJlci5jcmVhdGVFbGVtZW50KCdQYWdlJykgYXMgUGFnZTtcbiAgICBlbGVtZW50Lm5hdGl2ZUVsZW1lbnRbJ19fbmdfcGFnZV9fJ10gPSB0aGlzLnBhZ2U7XG4gICAgcmVuZGVyZXIuYXBwZW5kQ2hpbGQoZWxlbWVudC5uYXRpdmVFbGVtZW50LCB0aGlzLnBhZ2UpO1xuICB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xuICAgIGlmIChjaGFuZ2VzLmFjdGlvbkJhckhpZGRlbiAmJiBjaGFuZ2VzLmFjdGlvbkJhckhpZGRlbi5wcmV2aW91c1ZhbHVlICE9PSBjaGFuZ2VzLmFjdGlvbkJhckhpZGRlbi5jdXJyZW50VmFsdWUpIHtcbiAgICAgIGlmICh0aGlzLnBhZ2UpIHtcbiAgICAgICAgdGhpcy5wYWdlLmFjdGlvbkJhckhpZGRlbiA9ICEhdGhpcy5hY3Rpb25CYXJIaWRkZW47XG4gICAgICB9XG4gICAgfVxuICB9XG4gIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5wYWdlKSB7XG4gICAgICB0aGlzLnBhZ2UuYWN0aW9uQmFySGlkZGVuID0gISF0aGlzLmFjdGlvbkJhckhpZGRlbjtcbiAgICB9XG4gIH1cbn1cbiJdfQ==