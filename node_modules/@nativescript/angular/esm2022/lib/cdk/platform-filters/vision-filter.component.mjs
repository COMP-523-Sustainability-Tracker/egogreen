/* eslint-disable @angular-eslint/component-selector */
import { Component, Inject } from '@angular/core';
import { platformNames } from '@nativescript/core';
import { DEVICE } from '../../tokens';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
class VisionOSFilterComponent {
    constructor(device) {
        // Note: casting any to be backwards compatible
        // Available in 8.6+ only
        this.show = device.os === platformNames.visionos;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.1", ngImport: i0, type: VisionOSFilterComponent, deps: [{ token: DEVICE }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.0.1", type: VisionOSFilterComponent, selector: "visionos", ngImport: i0, template: `<ng-content *ngIf="show"></ng-content>`, isInline: true, dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] }); }
}
export { VisionOSFilterComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.1", ngImport: i0, type: VisionOSFilterComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'visionos',
                    template: `<ng-content *ngIf="show"></ng-content>`,
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [DEVICE]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlzaW9uLWZpbHRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9hbmd1bGFyL3NyYy9saWIvY2RrL3BsYXRmb3JtLWZpbHRlcnMvdmlzaW9uLWZpbHRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsdURBQXVEO0FBQ3ZELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2xELE9BQU8sRUFBRSxhQUFhLEVBQVcsTUFBTSxvQkFBb0IsQ0FBQztBQUM1RCxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sY0FBYyxDQUFDOzs7QUFFdEMsTUFJYSx1QkFBdUI7SUFHbEMsWUFBNEIsTUFBZTtRQUN6QywrQ0FBK0M7UUFDL0MseUJBQXlCO1FBQ3pCLElBQUksQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDLEVBQUUsS0FBTSxhQUFxQixDQUFDLFFBQVEsQ0FBQztJQUM1RCxDQUFDOzhHQVBVLHVCQUF1QixrQkFHZCxNQUFNO2tHQUhmLHVCQUF1QixnREFGeEIsd0NBQXdDOztTQUV2Qyx1QkFBdUI7MkZBQXZCLHVCQUF1QjtrQkFKbkMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsVUFBVTtvQkFDcEIsUUFBUSxFQUFFLHdDQUF3QztpQkFDbkQ7OzBCQUljLE1BQU07MkJBQUMsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIEBhbmd1bGFyLWVzbGludC9jb21wb25lbnQtc2VsZWN0b3IgKi9cbmltcG9ydCB7IENvbXBvbmVudCwgSW5qZWN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBwbGF0Zm9ybU5hbWVzLCBJRGV2aWNlIH0gZnJvbSAnQG5hdGl2ZXNjcmlwdC9jb3JlJztcbmltcG9ydCB7IERFVklDRSB9IGZyb20gJy4uLy4uL3Rva2Vucyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3Zpc2lvbm9zJyxcbiAgdGVtcGxhdGU6IGA8bmctY29udGVudCAqbmdJZj1cInNob3dcIj48L25nLWNvbnRlbnQ+YCxcbn0pXG5leHBvcnQgY2xhc3MgVmlzaW9uT1NGaWx0ZXJDb21wb25lbnQge1xuICBwdWJsaWMgc2hvdzogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3RvcihASW5qZWN0KERFVklDRSkgZGV2aWNlOiBJRGV2aWNlKSB7XG4gICAgLy8gTm90ZTogY2FzdGluZyBhbnkgdG8gYmUgYmFja3dhcmRzIGNvbXBhdGlibGVcbiAgICAvLyBBdmFpbGFibGUgaW4gOC42KyBvbmx5XG4gICAgdGhpcy5zaG93ID0gZGV2aWNlLm9zID09PSAocGxhdGZvcm1OYW1lcyBhcyBhbnkpLnZpc2lvbm9zO1xuICB9XG59XG4iXX0=