import { NgModule, Injectable, Inject, NgZone, RendererFactory2, Optional, SkipSelf } from '@angular/core';
import { DOCUMENT } from '@angular/common';
import { AnimationBuilder } from '@angular/animations';
import { AnimationDriver, ɵAnimationStyleNormalizer as AnimationStyleNormalizer, ɵWebAnimationsStyleNormalizer as WebAnimationsStyleNormalizer, ɵAnimationEngine as AnimationEngine } from '@angular/animations/browser';
import { ɵAnimationRendererFactory as AnimationRendererFactory, ɵBrowserAnimationBuilder as BrowserAnimationBuilder } from '@angular/platform-browser/animations';
// import { NativeScriptModule } from "../nativescript.module";
import { NativeScriptRendererFactory } from '../nativescript-renderer';
import { NativeScriptAnimationDriver } from './animation-driver';
import { throwIfAlreadyLoaded } from '../utils/general';
import { NativeScriptCommonModule } from '../nativescript-common.module';
import * as i0 from "@angular/core";
import * as i1 from "@angular/animations/browser";
class InjectableAnimationEngine extends AnimationEngine {
    constructor(doc, driver, normalizer) {
        super(doc.body, driver, normalizer);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.1", ngImport: i0, type: InjectableAnimationEngine, deps: [{ token: DOCUMENT }, { token: i1.AnimationDriver }, { token: i1.ɵAnimationStyleNormalizer }], target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.0.1", ngImport: i0, type: InjectableAnimationEngine }); }
}
export { InjectableAnimationEngine };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.1", ngImport: i0, type: InjectableAnimationEngine, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }, { type: i1.AnimationDriver }, { type: i1.ɵAnimationStyleNormalizer }]; } });
export function instantiateSupportedAnimationDriver() {
    return new NativeScriptAnimationDriver();
}
export function instantiateRendererFactory(renderer, engine, zone) {
    return new AnimationRendererFactory(renderer, engine, zone);
}
export function instantiateDefaultStyleNormalizer() {
    return new WebAnimationsStyleNormalizer();
}
class NativeScriptAnimationsModule {
    constructor(parentModule) {
        // Prevents NativeScriptAnimationsModule from getting imported multiple times
        throwIfAlreadyLoaded(parentModule, 'NativeScriptAnimationsModule');
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.1", ngImport: i0, type: NativeScriptAnimationsModule, deps: [{ token: NativeScriptAnimationsModule, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.0.1", ngImport: i0, type: NativeScriptAnimationsModule, imports: [NativeScriptCommonModule] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.0.1", ngImport: i0, type: NativeScriptAnimationsModule, providers: [
            {
                provide: AnimationDriver,
                useFactory: instantiateSupportedAnimationDriver,
            },
            { provide: AnimationBuilder, useClass: BrowserAnimationBuilder },
            {
                provide: AnimationStyleNormalizer,
                useFactory: instantiateDefaultStyleNormalizer,
            },
            { provide: AnimationEngine, useClass: InjectableAnimationEngine },
            {
                provide: RendererFactory2,
                useFactory: instantiateRendererFactory,
                deps: [NativeScriptRendererFactory, AnimationEngine, NgZone],
            },
        ], imports: [NativeScriptCommonModule] }); }
}
export { NativeScriptAnimationsModule };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.1", ngImport: i0, type: NativeScriptAnimationsModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [NativeScriptCommonModule],
                    providers: [
                        {
                            provide: AnimationDriver,
                            useFactory: instantiateSupportedAnimationDriver,
                        },
                        { provide: AnimationBuilder, useClass: BrowserAnimationBuilder },
                        {
                            provide: AnimationStyleNormalizer,
                            useFactory: instantiateDefaultStyleNormalizer,
                        },
                        { provide: AnimationEngine, useClass: InjectableAnimationEngine },
                        {
                            provide: RendererFactory2,
                            useFactory: instantiateRendererFactory,
                            deps: [NativeScriptRendererFactory, AnimationEngine, NgZone],
                        },
                    ],
                }]
        }], ctorParameters: function () { return [{ type: NativeScriptAnimationsModule, decorators: [{
                    type: Optional
                }, {
                    type: SkipSelf
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5pbWF0aW9ucy5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9hbmd1bGFyL3NyYy9saWIvYW5pbWF0aW9ucy9hbmltYXRpb25zLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLGdCQUFnQixFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0csT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzNDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRXZELE9BQU8sRUFBRSxlQUFlLEVBQUUseUJBQXlCLElBQUksd0JBQXdCLEVBQUUsNkJBQTZCLElBQUksNEJBQTRCLEVBQUUsZ0JBQWdCLElBQUksZUFBZSxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFFek4sT0FBTyxFQUFFLHlCQUF5QixJQUFJLHdCQUF3QixFQUFFLHdCQUF3QixJQUFJLHVCQUF1QixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFFbEssK0RBQStEO0FBQy9ELE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ3ZFLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ2pFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ3hELE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLCtCQUErQixDQUFDOzs7QUFFekUsTUFDYSx5QkFBMEIsU0FBUSxlQUFlO0lBQzVELFlBQThCLEdBQVEsRUFBRSxNQUF1QixFQUFFLFVBQW9DO1FBQ25HLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSxVQUFVLENBQUMsQ0FBQztJQUN0QyxDQUFDOzhHQUhVLHlCQUF5QixrQkFDaEIsUUFBUTtrSEFEakIseUJBQXlCOztTQUF6Qix5QkFBeUI7MkZBQXpCLHlCQUF5QjtrQkFEckMsVUFBVTs7MEJBRUksTUFBTTsyQkFBQyxRQUFROztBQUs5QixNQUFNLFVBQVUsbUNBQW1DO0lBQ2pELE9BQU8sSUFBSSwyQkFBMkIsRUFBRSxDQUFDO0FBQzNDLENBQUM7QUFFRCxNQUFNLFVBQVUsMEJBQTBCLENBQUMsUUFBcUMsRUFBRSxNQUF1QixFQUFFLElBQVk7SUFDckgsT0FBTyxJQUFJLHdCQUF3QixDQUFDLFFBQVEsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDOUQsQ0FBQztBQUVELE1BQU0sVUFBVSxpQ0FBaUM7SUFDL0MsT0FBTyxJQUFJLDRCQUE0QixFQUFFLENBQUM7QUFDNUMsQ0FBQztBQUVELE1Bb0JhLDRCQUE0QjtJQUN2QyxZQUFvQyxZQUEwQztRQUM1RSw2RUFBNkU7UUFDN0Usb0JBQW9CLENBQUMsWUFBWSxFQUFFLDhCQUE4QixDQUFDLENBQUM7SUFDckUsQ0FBQzs4R0FKVSw0QkFBNEI7K0dBQTVCLDRCQUE0QixZQW5CN0Isd0JBQXdCOytHQW1CdkIsNEJBQTRCLGFBbEI1QjtZQUNUO2dCQUNFLE9BQU8sRUFBRSxlQUFlO2dCQUN4QixVQUFVLEVBQUUsbUNBQW1DO2FBQ2hEO1lBQ0QsRUFBRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsUUFBUSxFQUFFLHVCQUF1QixFQUFFO1lBQ2hFO2dCQUNFLE9BQU8sRUFBRSx3QkFBd0I7Z0JBQ2pDLFVBQVUsRUFBRSxpQ0FBaUM7YUFDOUM7WUFDRCxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsUUFBUSxFQUFFLHlCQUF5QixFQUFFO1lBQ2pFO2dCQUNFLE9BQU8sRUFBRSxnQkFBZ0I7Z0JBQ3pCLFVBQVUsRUFBRSwwQkFBMEI7Z0JBQ3RDLElBQUksRUFBRSxDQUFDLDJCQUEyQixFQUFFLGVBQWUsRUFBRSxNQUFNLENBQUM7YUFDN0Q7U0FDRixZQWpCUyx3QkFBd0I7O1NBbUJ2Qiw0QkFBNEI7MkZBQTVCLDRCQUE0QjtrQkFwQnhDLFFBQVE7bUJBQUM7b0JBQ1IsT0FBTyxFQUFFLENBQUMsd0JBQXdCLENBQUM7b0JBQ25DLFNBQVMsRUFBRTt3QkFDVDs0QkFDRSxPQUFPLEVBQUUsZUFBZTs0QkFDeEIsVUFBVSxFQUFFLG1DQUFtQzt5QkFDaEQ7d0JBQ0QsRUFBRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsUUFBUSxFQUFFLHVCQUF1QixFQUFFO3dCQUNoRTs0QkFDRSxPQUFPLEVBQUUsd0JBQXdCOzRCQUNqQyxVQUFVLEVBQUUsaUNBQWlDO3lCQUM5Qzt3QkFDRCxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsUUFBUSxFQUFFLHlCQUF5QixFQUFFO3dCQUNqRTs0QkFDRSxPQUFPLEVBQUUsZ0JBQWdCOzRCQUN6QixVQUFVLEVBQUUsMEJBQTBCOzRCQUN0QyxJQUFJLEVBQUUsQ0FBQywyQkFBMkIsRUFBRSxlQUFlLEVBQUUsTUFBTSxDQUFDO3lCQUM3RDtxQkFDRjtpQkFDRjs7MEJBRWMsUUFBUTs7MEJBQUksUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBJbmplY3RhYmxlLCBJbmplY3QsIE5nWm9uZSwgUmVuZGVyZXJGYWN0b3J5MiwgT3B0aW9uYWwsIFNraXBTZWxmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBET0NVTUVOVCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBBbmltYXRpb25CdWlsZGVyIH0gZnJvbSAnQGFuZ3VsYXIvYW5pbWF0aW9ucyc7XG5cbmltcG9ydCB7IEFuaW1hdGlvbkRyaXZlciwgybVBbmltYXRpb25TdHlsZU5vcm1hbGl6ZXIgYXMgQW5pbWF0aW9uU3R5bGVOb3JtYWxpemVyLCDJtVdlYkFuaW1hdGlvbnNTdHlsZU5vcm1hbGl6ZXIgYXMgV2ViQW5pbWF0aW9uc1N0eWxlTm9ybWFsaXplciwgybVBbmltYXRpb25FbmdpbmUgYXMgQW5pbWF0aW9uRW5naW5lIH0gZnJvbSAnQGFuZ3VsYXIvYW5pbWF0aW9ucy9icm93c2VyJztcblxuaW1wb3J0IHsgybVBbmltYXRpb25SZW5kZXJlckZhY3RvcnkgYXMgQW5pbWF0aW9uUmVuZGVyZXJGYWN0b3J5LCDJtUJyb3dzZXJBbmltYXRpb25CdWlsZGVyIGFzIEJyb3dzZXJBbmltYXRpb25CdWlsZGVyIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlci9hbmltYXRpb25zJztcblxuLy8gaW1wb3J0IHsgTmF0aXZlU2NyaXB0TW9kdWxlIH0gZnJvbSBcIi4uL25hdGl2ZXNjcmlwdC5tb2R1bGVcIjtcbmltcG9ydCB7IE5hdGl2ZVNjcmlwdFJlbmRlcmVyRmFjdG9yeSB9IGZyb20gJy4uL25hdGl2ZXNjcmlwdC1yZW5kZXJlcic7XG5pbXBvcnQgeyBOYXRpdmVTY3JpcHRBbmltYXRpb25Ecml2ZXIgfSBmcm9tICcuL2FuaW1hdGlvbi1kcml2ZXInO1xuaW1wb3J0IHsgdGhyb3dJZkFscmVhZHlMb2FkZWQgfSBmcm9tICcuLi91dGlscy9nZW5lcmFsJztcbmltcG9ydCB7IE5hdGl2ZVNjcmlwdENvbW1vbk1vZHVsZSB9IGZyb20gJy4uL25hdGl2ZXNjcmlwdC1jb21tb24ubW9kdWxlJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEluamVjdGFibGVBbmltYXRpb25FbmdpbmUgZXh0ZW5kcyBBbmltYXRpb25FbmdpbmUge1xuICBjb25zdHJ1Y3RvcihASW5qZWN0KERPQ1VNRU5UKSBkb2M6IGFueSwgZHJpdmVyOiBBbmltYXRpb25Ecml2ZXIsIG5vcm1hbGl6ZXI6IEFuaW1hdGlvblN0eWxlTm9ybWFsaXplcikge1xuICAgIHN1cGVyKGRvYy5ib2R5LCBkcml2ZXIsIG5vcm1hbGl6ZXIpO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbnN0YW50aWF0ZVN1cHBvcnRlZEFuaW1hdGlvbkRyaXZlcigpIHtcbiAgcmV0dXJuIG5ldyBOYXRpdmVTY3JpcHRBbmltYXRpb25Ecml2ZXIoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGluc3RhbnRpYXRlUmVuZGVyZXJGYWN0b3J5KHJlbmRlcmVyOiBOYXRpdmVTY3JpcHRSZW5kZXJlckZhY3RvcnksIGVuZ2luZTogQW5pbWF0aW9uRW5naW5lLCB6b25lOiBOZ1pvbmUpIHtcbiAgcmV0dXJuIG5ldyBBbmltYXRpb25SZW5kZXJlckZhY3RvcnkocmVuZGVyZXIsIGVuZ2luZSwgem9uZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbnN0YW50aWF0ZURlZmF1bHRTdHlsZU5vcm1hbGl6ZXIoKSB7XG4gIHJldHVybiBuZXcgV2ViQW5pbWF0aW9uc1N0eWxlTm9ybWFsaXplcigpO1xufVxuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbTmF0aXZlU2NyaXB0Q29tbW9uTW9kdWxlXSxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogQW5pbWF0aW9uRHJpdmVyLFxuICAgICAgdXNlRmFjdG9yeTogaW5zdGFudGlhdGVTdXBwb3J0ZWRBbmltYXRpb25Ecml2ZXIsXG4gICAgfSxcbiAgICB7IHByb3ZpZGU6IEFuaW1hdGlvbkJ1aWxkZXIsIHVzZUNsYXNzOiBCcm93c2VyQW5pbWF0aW9uQnVpbGRlciB9LFxuICAgIHtcbiAgICAgIHByb3ZpZGU6IEFuaW1hdGlvblN0eWxlTm9ybWFsaXplcixcbiAgICAgIHVzZUZhY3Rvcnk6IGluc3RhbnRpYXRlRGVmYXVsdFN0eWxlTm9ybWFsaXplcixcbiAgICB9LFxuICAgIHsgcHJvdmlkZTogQW5pbWF0aW9uRW5naW5lLCB1c2VDbGFzczogSW5qZWN0YWJsZUFuaW1hdGlvbkVuZ2luZSB9LFxuICAgIHtcbiAgICAgIHByb3ZpZGU6IFJlbmRlcmVyRmFjdG9yeTIsXG4gICAgICB1c2VGYWN0b3J5OiBpbnN0YW50aWF0ZVJlbmRlcmVyRmFjdG9yeSxcbiAgICAgIGRlcHM6IFtOYXRpdmVTY3JpcHRSZW5kZXJlckZhY3RvcnksIEFuaW1hdGlvbkVuZ2luZSwgTmdab25lXSxcbiAgICB9LFxuICBdLFxufSlcbmV4cG9ydCBjbGFzcyBOYXRpdmVTY3JpcHRBbmltYXRpb25zTW9kdWxlIHtcbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgQFNraXBTZWxmKCkgcGFyZW50TW9kdWxlOiBOYXRpdmVTY3JpcHRBbmltYXRpb25zTW9kdWxlKSB7XG4gICAgLy8gUHJldmVudHMgTmF0aXZlU2NyaXB0QW5pbWF0aW9uc01vZHVsZSBmcm9tIGdldHRpbmcgaW1wb3J0ZWQgbXVsdGlwbGUgdGltZXNcbiAgICB0aHJvd0lmQWxyZWFkeUxvYWRlZChwYXJlbnRNb2R1bGUsICdOYXRpdmVTY3JpcHRBbmltYXRpb25zTW9kdWxlJyk7XG4gIH1cbn1cbiJdfQ==